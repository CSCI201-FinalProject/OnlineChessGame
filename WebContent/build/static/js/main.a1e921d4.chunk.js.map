{"version":3,"sources":["components/Square.js","components/PromotionChoice.js","components/Game.js","components/Piece.js","components/BoardSquare.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Square","children","bgClass","black","className","promotionPieces","PromotionChoice","promotion","from","to","color","map","p","i","onClick","move","src","chess","Chess","gameSubject","BehaviorSubject","board","myUsername","ws","WebSocket","myMove","hasStarted","result","tmp","window","location","search","substr","split","forEach","item","decodeURIComponent","opponentUsername","onopen","event","send","firstText","gameTime","incrementTimer","tempMove","updateGame","pendingPromotion","isGameOver","game_over","newGame","turn","getGameResult","started","next","whitePiecesUsername","blackPiecesUsername","in_checkmate","winner","in_draw","reason","in_stalemate","in_threefold_repetition","insufficient_material","onmessage","console","log","data","substring","setInterval","jsonMove","JSON","parse","onclose","onerror","Piece","piece","type","position","useDrag","id","collect","monitor","isDragging","drag","preview","pieceImg","DragPreviewImage","connect","ref","style","opacity","BoardSquare","useState","setPromotion","useDrop","accept","drop","promotions","moves","verbose","filter","m","table","some","getValue","handleMove","useEffect","subscribe","unsibscribe","Board","currBoard","setCurrBoard","getXYPosition","x","Math","abs","y","floor","isBlack","getPosition","flat","reverse","goToHomeMenu","href","App","setBoard","setIsGameOver","setResult","setStarted","setMyUsername","setOpponentUsername","game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.a1e921d4.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Square({children, black}) {\n    \n    const bgClass = black ? 'square-black' : 'square-white'\n    \n    return (\n    <div className = {`${bgClass} board-square`}> \n        {children}\n    </div> \n    )\n}","import React, {useEffect, useState} from 'react'\nimport Square from './Square'\nimport {move} from './Game'\n\nconst promotionPieces = ['r', 'n', 'b', 'q']\n\nexport default function PromotionChoice({\n    promotion: {from, to, color},\n})\n{\n    return(\n       <div className = \"board\"> \n           {promotionPieces.map((p, i) => (\n                <div key = {i} className = \"promote-square\">\n                    <div className = \"piece-container\" \n                    onClick={()=> move(from, to, p)} >\n                        <img \n                        src = {`assets/images/${p}_${color}.png`} \n                        className = \"piece cursor-pointer\"\n                        />\n                    </div>\n                </div>\n           ))}\n       </div>\n   )\n\n}","import { getByPlaceholderText } from '@testing-library/dom';\nimport * as Chess from 'chess.js'\nimport {BehaviorSubject} from 'rxjs'\nimport PromotionChoice from './PromotionChoice'\n\n\nconst chess = new Chess();\n\n\nexport const gameSubject = new BehaviorSubject({\n    board: chess.board\n})\n\nexport function initGame() {\n    updateGame()\n}\n\nexport function resetGame() {\n    chess.reset()\n    updateGame()\n}\n\nexport function handleMove(from, to) {\n    // Array of all possible promotions from the current position\n    const promotions = chess.moves({verbose: true}).filter(m => m.promotion)\n    console.table(promotions)\n    // Some method is if one item in array satisfies condition\n    if(promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)) {\n        const pendingPromotion = {from, to, color: promotions[0].color}\n        updateGame(pendingPromotion) \n    }\n\n    const {pendingPromotion} = gameSubject.getValue()\n\n    if(!pendingPromotion) {\n        move(from, to)\n    }\n}\n\nvar ws = new WebSocket(\"ws://ec2-3-128-29-8.us-east-2.compute.amazonaws.com:8080/OnlineChessGame/GameEndpoint\");\n//var ws = new WebSocket(\"ws://ec2-3-128-29-8.us-east-2.compute.amazonaws.com:8080/OnlineChessGame/GameEndpoint\");\n\nexport var color = 'b';\n\nvar myMove = false;\nvar hasStarted = false;\n\n// Once cookie works this will be good\n// export var myUsername = document.cookie\n    \nexport var myUsername;\n\nvar result = null;\nvar tmp = [];\nwindow.location.search\n.substr(1)\n.split(\"&\")\n.forEach(function (item) {\n  tmp = item.split(\"=\");\n  if (tmp[0] === \"name\") result = decodeURIComponent(tmp[1]);\n});\n\nmyUsername = result;\n\nexport var opponentUsername = \"Waiting For Player To Connect\";\n// Now block here for opponents move to come back\n// TODO; randomly assign color\nws.onopen = function(event) {\n    ws.send(\"username=\"+myUsername);\n}\nvar firstText = true;\nlet gameTime = 0;\n\nfunction incrementTimer(){\n    gameTime += 1;\n}\nws.onmessage = function(event) {\n    \n    console.log(\"Recieved data from server \" + event.data)\n    // If they send opponents username and any other info: \n    if(event.data.substring(0, 9) == \"username=\"){\n        opponentUsername = event.data.substring(9);\n        // This is when game timer should start, as opponent connected\n        window.setInterval(incrementTimer, 1000)\n        updateGame();\n    }\n    \n    else if (!firstText) {\n        var jsonMove = JSON.parse(event.data);\n\n        var from = jsonMove.from;\n        var to = jsonMove.to;\n        var promotion = jsonMove.promotion\n        let tempMove = {from, to}\n        if(promotion) {\n            tempMove.promotion = promotion\n        }\n        const legalMove = chess.move(tempMove)\n        if(legalMove) {\n           // color = jsonMove.color\n            updateGame();\n            myMove = true;\n        }    \n    } else {\n        hasStarted = true;\n        firstText = false;\n        color = event.data;\n        if(color === \"w\"){\n            myMove = true;\n        }\n        updateGame()\n    }\n \n}\nws.onclose = function(event) {\n    // document.getElementById(\"mychat\").innerHTML += \"Disconnected!<br />\";\n}\nws.onerror = function(event) {\n    //alert('check');\n}\n\nexport function move(from, to, promotion) {\n    if(!myMove){\n        return;\n    }\n    let tempMove = {from, to}\n    if(promotion) {\n        tempMove.promotion = promotion\n    }\n    const legalMove = chess.move(tempMove)\n    if(legalMove) {\n        updateGame();\n        ws.send(`{\"from\":\"${from}\",\"to\":\"${to}\",\"promotion\":\"${promotion}\"}`, function(){});\n        myMove = false;\n    }    \n}\n\nfunction updateGame(pendingPromotion) {\n    const isGameOver = chess.game_over()\n    \n    const newGame =  {\n        board: chess.board(),\n        pendingPromotion,\n        isGameOver,\n        turn: chess.turn(),\n        result: isGameOver ? getGameResult() : null, \n        myUsername: myUsername,\n        opponentUsername: opponentUsername,\n        started: hasStarted\n    }\n\n    gameSubject.next(newGame)\n}\n\nfunction getGameResult() {\n    // Lets send result of game to server in this method!\n    let whitePiecesUsername = \"\"\n    let blackPiecesUsername = \"\"\n    if(color == 'w'){\n        whitePiecesUsername = myUsername;\n        blackPiecesUsername = opponentUsername;\n    }\n    else{\n        whitePiecesUsername = myUsername;\n        blackPiecesUsername = opponentUsername;\n    }\n    if(chess.in_checkmate()) {\n        const winner = (chess.turn() === \"w\") ? 'BLACK' : 'WHITE'\n        \n        // Didn't win, so dont call it\n        // Two cases to send info to server, if white and won, or if black and won\n        if(color == 'w' && winner == 'WHITE' ){\n            ws.send(\"GameOver,\" + whitePiecesUsername + \",\" \n            + blackPiecesUsername + \",win,\" + gameTime);\n        }\n        else if(color == 'b' && winner == 'BLACK') {\n            ws.send(\"GameOver,\" + whitePiecesUsername + \",\" \n            + blackPiecesUsername + \",lose,\" + gameTime);\n        }\n        return `CHECKMATE - WINNER - ${winner}`\n    }\n    else if (chess.in_draw()) {\n        let reason = '50 - MOVES - RULE'\n        if(chess.in_stalemate()) {\n            reason = 'STALEMATE'\n        }\n        else if(chess.in_threefold_repetition()){\n            reason = 'REPITITION'\n        }\n        else if(chess.insufficient_material()){\n            reason = 'INSUFFICIENT MATERIAL'\n        }\n        \n        // Arbitrarily only have white call this so both clients dont send the same info\n        if(color == 'w'){ \n            ws.send(\"GameOver,\" + whitePiecesUsername + \",\" \n            + blackPiecesUsername + \",tie,\" +gameTime);\n        }\n\n        return `DRAW - ${reason}`\n\n    }\n    else{\n        return 'UNKNOWN REASON'\n    }\n}","import React from 'react'\nimport {useDrag, DragPreviewImage} from 'react-dnd'\n\nexport default function Piece({piece: {type, color}, position}) {\n    const [{isDragging} , drag, preview] = useDrag({\n        item: {\n            type: 'piece', \n            id: `${position}_${type}_${color}`,\n        },\n        collect: (monitor) => {\n            return {isDragging: !!monitor.isDragging()}\n        },\n    })\n    const pieceImg = (`assets/images/${type}_${color}.png`);\n    return( \n    <div className = \"test\">\n        <DragPreviewImage connect={preview} src ={pieceImg}>\n        </DragPreviewImage>\n        <div className = \"piece-container\" ref={drag} style ={{opacity: isDragging ? 0 : 1 }} >\n            <img src = {pieceImg}  className = \"piece\"/>\n        </div> \n    </div>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport Square from './Square'\nimport Piece from './Piece'\nimport {useDrop} from 'react-dnd'\nimport {handleMove} from './Game'\nimport {gameSubject} from './Game'\nimport PromotionChoice from './PromotionChoice'\n\nexport default function BoardSquare({piece, black, position}) {\n    \n    const [promotion, setPromotion] = useState(null)\n    \n    const [ , drop] = useDrop({\n        accept: 'piece',\n        drop: (item) => {\n            let arr = item.id.split('_')\n            const fromPosition = arr[0];\n            handleMove(fromPosition, position)\n        },\n    })\n   \n    useEffect(() => {\n        const subscribe = gameSubject.subscribe(({pendingPromotion}) =>\n            pendingPromotion && pendingPromotion.to === position \n            ? setPromotion(pendingPromotion)\n            : setPromotion(null)\n        )\n        return () => subscribe.unsibscribe()\n    }, [])\n\n    return (\n        <div className = \"board-square\" ref = {drop}> \n            <Square black={black}>\n                {promotion ?  (\n                <PromotionChoice promotion = {promotion}/> \n                ) : piece ? (\n                 <Piece piece = {piece} position={position} />\n                ) : null}\n            </Square>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport BoardSquare from './BoardSquare'\nimport {color} from './Game'\n\n\nexport default function Board({board, turn}){\n    const [currBoard, setCurrBoard] = useState([]);\n    useEffect(() => {\n        setCurrBoard(\n            color === 'w' ? board.flat() : board.flat().reverse()\n    \n        )\n    }, [board, turn])\n    function getXYPosition(i) {\n        const x = color === 'w' ? i % 8 : Math.abs(i % 8 - 7);\n        const y = color === 'w' ? Math.abs(Math.floor(i / 8) - 7) : Math.floor(i / 8)\n        /*\n        const x = i % 8;\n        const y = Math.abs(Math.floor(i / 8) - 7);\n        */\n        return {x, y}\n    }\n    function isBlack (i) {\n        const {x,y} = getXYPosition(i);\n        \n        return (x + y)  % 2 == 0;\n    }\n\n    function getPosition(i){\n        const {x,y} = getXYPosition(i);\n        const letter = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"][x]\n        return `${letter}${y + 1}`;\n    }\n    return <div className = \"board\">\n        {currBoard.map((piece, i) => (\n        <div key = {i} className = \"square\">\n             <BoardSquare \n             piece={piece} \n             black = {isBlack(i)} \n             position = {getPosition(i)}/>\n        </div>\n        ))}\n    </div>\n}","import './App.css';\nimport React, {useEffect, useState} from 'react'\nimport {gameSubject, initGame, resetGame} from './components/Game'\nimport Board from './components/Board'\n// import {myUsername, opponentUsername} from './components/Game'\n\n// console.log(\"opponent username is: \" + opponentUsername);\nfunction App() {\n  const [board, setBoard] = useState([]);\n  const [isGameOver, setIsGameOver] = useState()\n  const [result, setResult] = useState()\n  const [started, setStarted] = useState()\n  const [myUsername, setMyUsername] = useState()\n  const [opponentUsername, setOpponentUsername] = useState()\n  \n  useEffect(() => {\n    initGame()\n    const subscribe = gameSubject.subscribe((game) => {\n      setBoard(game.board)\n      setIsGameOver(game.isGameOver)\n      setResult(game.result)\n      setStarted(game.started)\n      setMyUsername(game.myUsername)\n      setOpponentUsername(game.opponentUsername)\n    })\n    return () => subscribe.unsibscribe()\n  }, [])\n\n  return (\n    \n<div> \n  <div> \n    {result && <button className = \"returnButton\" \n    onClick = {goToHomeMenu}> \n    <h1> MAIN MENU </h1>\n    </button>}\n  </div>\n  <div className = \"searching\">\n    {started ? \"\" : \"Searching For Game...\"}\n  </div>\n\n    <div className = \"container\">\n\n      {isGameOver && (\n        <h2 className = \"vertical-text\"> GAME OVER\n        </h2>\n        \n      )}\n      <div className = \"board-container\">\n        <div className = \"opponentUsernameBox\">\n          {opponentUsername}\n        </div>\n\n        <Board board = {board}/>\n        <div className = \"myUsernameBox\">\n          {myUsername}\n        </div>\n      </div> \n      {result && <p className = \"vertical-text\">{result}</p>}\n    </div>\n</div>\n  );\n}\n\nfunction goToHomeMenu(){\n  //window.location.href = \"http://localhost:11111/OnlineChessGame/\";\n\n  window.location.href = \"http://ec2-3-128-29-8.us-east-2.compute.amazonaws.com:8080/OnlineChessGame/GameEndpoint\";\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DndProvider} from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend = {HTML5Backend} >\n      <App />\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}